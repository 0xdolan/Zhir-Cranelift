@page
@model IndexModel
@{
    ViewData["Title"] = "Home page";
}

<div id="error-div" class="alert alert-danger" role="alert" hidden>
    <span id="error-text"></span>
    <button class="btn btn-primary" style="margin: auto" onclick="again()">👈 Back</button>
</div>

<div class="alert alert-info" role="alert">
    <p>Zhir OCR is a Optical Character Recognition service for Kurdish language.
    The project will be done in multiple phases. For now, we only support scanning printed text. But in the future we will trian
    models to recognize handwritten Kurdish text.</p>
    <b>Note:</b> ZhirAI is in early beta phase. The final product will be more accurate, reliable, and user friendly!
</div>

<div id="try">

    <div class="card mb-4 box-shadow">
        <div class="card-body">
            <h5 class="card-title">Try it out by uploading an image:</h5>
            <h6 class="card-subtitle mb-2 text-muted">Please select an image to be scanned (Or drag and drop the image below):</h6>
            <form asp-controller="Ocr" asp-action="PostForm"
                  enctype="multipart/form-data" onsubmit="submitForm(this);return false;"
                  method="post">

                <div class="form-group">
                    <label for="imageFiles"></label>
                    <div class="form-inline">
                        <input name="imageFiles" class="form-control col-8" type="file" style="padding:10px;height:50px" />
                        <input class="btn btn-primary btn-lg col-3 offset-1" type="submit" value="Scan 🔎" />
                    </div>
                </div>
            </form>
        </div>
    </div>

    @{
        const int totalWidth = 12;
        const int width = 4;
        const int columns = totalWidth / width;
    }

    <div class="card box-shadow mb-4">
        <div class="card-body">
            <h5 class="card-title">Or try one of our examples:</h5>
            <h6 class="card-subtitle mb-2 text-muted">Click on <b>Try</b> of the examples to extract text.</h6>
            <div>
                @for (int i = 0; i < Model.Samples.Length; i++)
                {
                    if (i % columns == 0)
                    {
                        @Html.Raw("<div class=\"row mb-2\">")
                    }

                    <div class="col-lg-4">
                        <div class="card m-2">
                            <img class="card-img-top" src="@Model.Samples[i]" style="height:250px">
                            <div class="card-body">
                                <a href="#" class="btn btn-primary col-6" onclick="submitUrl('@Model.Samples[i]');">Try</a>
                                <a href="@Model.Samples[i]" target="_blank" class="card-link col-4 offset-2">Zoom</a>
                            </div>
                        </div>
                    </div>

                    if ((i + 1) % columns == 0)
                    {
                        @Html.Raw("</div>")
                    }
                }
            </div>
        </div>
    </div>

</div>

<div id="progress" hidden>
    <div class="sk-circle">
        <div class="sk-circle1 sk-child"></div>
        <div class="sk-circle2 sk-child"></div>
        <div class="sk-circle3 sk-child"></div>
        <div class="sk-circle4 sk-child"></div>
        <div class="sk-circle5 sk-child"></div>
        <div class="sk-circle6 sk-child"></div>
        <div class="sk-circle7 sk-child"></div>
        <div class="sk-circle8 sk-child"></div>
        <div class="sk-circle9 sk-child"></div>
        <div class="sk-circle10 sk-child"></div>
        <div class="sk-circle11 sk-child"></div>
        <div class="sk-circle12 sk-child"></div>
    </div>
</div>

<div id="result" style="margin-top:15px" hidden>
    @*<img id="preprocessed-image" class="col-md-6" />*@

    <button class="btn btn-primary btn-lg col-12" style="margin: auto" onclick="again()">👈 Back</button>

    <div style="height:10px; clear:both"></div>

    <div class="row">
        <img id="preprocessed-img" class="col-lg-6 img-fluid" />
        <div id="output-text" class="col-lg-6" dir="rtl"
             style="white-space: pre-wrap; overflow-y: auto; text-align: right; background-color: whitesmoke; padding: 20px; "></div>
    </div>
</div>

<div style="height:10px; clear:both"></div>

<script>

    function again() {
        location.reload();
    }

    async function submitForm(oFormElement) {
        const formData = new FormData(oFormElement);

        let promise = fetch(oFormElement.action, {
            method: 'POST',
            body: formData,
        });

        await submit(promise);
    }

    async function submitUrl(url) {
        let body = {
            url : url
        };

        let promise = fetch('@Url.Action("PostUrl", "Ocr")', {
            method: 'POST',
            body: JSON.stringify(body),
            headers: {
                'Content-Type': 'application/json'
            },
        });

        await submit(promise);
    }

    async function submit(promise) {
        try {
            let errorAlert = document.getElementById("error-div");
            let progress = document.getElementById("progress");
            let tryDiv = document.getElementById("try");

            tryDiv.setAttribute("hidden", "true");
            errorAlert.setAttribute("hidden", "true");

            progress.removeAttribute("hidden");

            const response = await promise;

            let body = await response.json();
            progress.setAttribute("hidden", "true");

            if (response.ok) {
                let output = document.getElementById("output-text");
                output.textContent = body.output;

                let preprocessedImg = document.getElementById("preprocessed-img");
                preprocessedImg.setAttribute("src", body.preprocessed);

                let result = document.getElementById("result");
                result.removeAttribute("hidden");
            } else {
                let errorText = document.getElementById("error-text");
                errorAlert.removeAttribute("hidden");
                errorText.textContent = body.error;
            }
        } catch (error) {
            console.error('Error:', error);
        }
    }
</script>
